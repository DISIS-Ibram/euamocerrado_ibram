/**
 * Storage and control for undo information within a CodeMirror
 * editor. 'Why on earth is such a complicated mess required for
 * that?', I hear you ask. The goal, in implementing this, was to make
 * the complexity of storing and reverting undo information depend
 * only on the size of the edited or restored content, not on the size
 * of the whole document. This makes it necessary to use a kind of
 * 'diff' system, which, when applied to a DOM tree, causes some
 * complexity and hackery.
 *
 * In short, the editor 'touches' BR elements as it parses them, and
 * the UndoHistory stores these. When nothing is touched in commitDelay
 * milliseconds, the changes are committed: It goes over all touched
 * nodes, throws out the ones that did not change since last commit or
 * are no longer in the document, and assembles the rest into zero or
 * more 'chains' -- arrays of adjacent lines. Links back to these
 * chains are added to the BR nodes, while the chain that previously
 * spanned these nodes is added to the undo history. Undoing a change
 * means taking such a chain off the undo history, restoring its
 * content (text is saved per line) and linking it back into the
 * document.
 */// A history object needs to know about the DOM container holding the
// document, the maximum amount of undo levels it should store, the
// delay (of no input) after which it commits a set of changes, and,
// unfortunately, the 'parent' window -- a window that is not in
// designMode, and on which setTimeout works in every browser.
function UndoHistory(e,t,n,r){this.container=e;this.maxDepth=t;this.commitDelay=n;this.editor=r;var i={text:"",from:null,to:null};this.first=i;this.last=i;this.firstTouched=!1;this.history=[];this.redoHistory=[];this.touched=[];this.lostundo=0}UndoHistory.prototype={scheduleCommit:function(){var e=this;parent.clearTimeout(this.commitTimeout);this.commitTimeout=parent.setTimeout(function(){e.tryCommit()},this.commitDelay)},touch:function(e){this.setTouched(e);this.scheduleCommit()},undo:function(){this.commit();if(this.history.length){var e=this.history.pop();this.redoHistory.push(this.updateTo(e,"applyChain"));this.notifyEnvironment();return this.chainNode(e)}},redo:function(){this.commit();if(this.redoHistory.length){var e=this.redoHistory.pop();this.addUndoLevel(this.updateTo(e,"applyChain"));this.notifyEnvironment();return this.chainNode(e)}},clear:function(){this.history=[];this.redoHistory=[];this.lostundo=0},historySize:function(){return{undo:this.history.length,redo:this.redoHistory.length,lostundo:this.lostundo}},push:function(e,t,n){var r=[];for(var i=0;i<n.length;i++){var s=i==n.length-1?t:document.createElement("br");r.push({from:e,to:s,text:cleanText(n[i])});e=s}this.pushChains([r],e==null&&t==null);this.notifyEnvironment()},pushChains:function(e,t){this.commit(t);this.addUndoLevel(this.updateTo(e,"applyChain"));this.redoHistory=[]},chainNode:function(e){for(var t=0;t<e.length;t++){var n=e[t][0],r=n&&(n.from||n.to);if(r)return r}},reset:function(){this.history=[];this.redoHistory=[];this.lostundo=0},textAfter:function(e){return this.after(e).text},nodeAfter:function(e){return this.after(e).to},nodeBefore:function(e){return this.before(e).from},tryCommit:function(){if(!window||!window.parent||!window.UndoHistory)return;this.editor.highlightDirty()?this.commit(!0):this.scheduleCommit()},commit:function(e){parent.clearTimeout(this.commitTimeout);e||this.editor.highlightDirty(!0);var t=this.touchedChains(),n=this;if(t.length){this.addUndoLevel(this.updateTo(t,"linkChain"));this.redoHistory=[];this.notifyEnvironment()}},updateTo:function(e,t){var n=[],r=[];for(var i=0;i<e.length;i++){n.push(this.shadowChain(e[i]));r.push(this[t](e[i]))}t=="applyChain"&&this.notifyDirty(r);return n},notifyDirty:function(e){forEach(e,method(this.editor,"addDirtyNode"));this.editor.scheduleHighlight()},notifyEnvironment:function(){this.onChange&&this.onChange(this.editor);window.frameElement&&window.frameElement.CodeMirror.updateNumbers&&window.frameElement.CodeMirror.updateNumbers()},linkChain:function(e){for(var t=0;t<e.length;t++){var n=e[t];n.from?n.from.historyAfter=n:this.first=n;n.to?n.to.historyBefore=n:this.last=n}},after:function(e){return e?e.historyAfter:this.first},before:function(e){return e?e.historyBefore:this.last},setTouched:function(e){if(e){if(!e.historyTouched){this.touched.push(e);e.historyTouched=!0}}else this.firstTouched=!0},addUndoLevel:function(e){this.history.push(e);if(this.history.length>this.maxDepth){this.history.shift();lostundo+=1}},touchedChains:function(){function n(e){return e?e.historyTemp:t}function r(e,n){e?e.historyTemp=n:t=n}function i(t){var n=[];for(var r=t?t.nextSibling:e.container.firstChild;r&&(!isBR(r)||r.hackBR);r=r.nextSibling)!r.hackBR&&r.currentText&&n.push(r.currentText);return{from:t,to:r,text:cleanText(n.join(""))}}function o(e,t){var n=t+"Sibling",r=e[n];while(r&&!isBR(r))r=r[n];return r}var e=this,t=null,s=[];e.firstTouched&&e.touched.push(null);forEach(e.touched,function(t){if(t&&(t.parentNode!=e.container||t.hackBR))return;t?t.historyTouched=!1:e.firstTouched=!1;var n=i(t),o=e.after(t);if(!o||o.text!=n.text||o.to!=n.to){s.push(n);r(t,n)}});var u=[];e.touched=[];forEach(s,function(t){if(!n(t.from))return;var s=[],a=t.from,f=!0;for(;;){var l=n(a);if(!l){if(f)break;l=i(a)}s.unshift(l);r(a,null);if(!a)break;f=e.after(a);a=o(a,"previous")}a=t.to;f=e.before(t.from);for(;;){if(!a)break;var l=n(a);if(!l){if(f)break;l=i(a)}s.push(l);r(a,null);f=e.before(a);a=o(a,"next")}u.push(s)});return u},shadowChain:function(e){var t=[],n=this.after(e[0].from),r=e[e.length-1].to;for(;;){t.push(n);var i=n.to;if(!i||i==r)break;n=i.historyAfter||this.before(r)}return t},applyChain:function(e){function r(e,t){var r=e?e.nextSibling:n.container.firstChild;while(r!=t){var i=r.nextSibling;removeElement(r);r=i}}var t=select.cursorPos(this.container,!1),n=this,i=e[0].from,s=e[e.length-1].to;r(i,s);for(var o=0;o<e.length;o++){var u=e[o];o>0&&n.container.insertBefore(u.from,s);var a=makePartSpan(fixSpaces(u.text));n.container.insertBefore(a,s);if(t&&t.node==u.from){var f=0,l=this.after(u.from);if(l&&o==e.length-1){for(var c=0;c<t.offset&&u.text.charAt(c)==l.text.charAt(c);c++);t.offset>c&&(f=u.text.length-l.text.length)}select.setCursorPos(this.container,{node:u.from,offset:Math.max(0,t.offset+f)})}else t&&o==e.length-1&&t.node&&t.node.parentNode!=this.container&&select.setCursorPos(this.container,{node:u.from,offset:u.text.length})}this.linkChain(e);return i}};